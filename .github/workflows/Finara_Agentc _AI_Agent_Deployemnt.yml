# name: Finara Agentc AI Agent Deployemnt

# on:
#   workflow_dispatch:
#     inputs:
#       action:
#         description: 'Choose action: deploy, list, delete, query, test'
#         required: true
#         default: 'deploy'
#         type: choice
#         options:
#           - deploy
#           - list
#           - delete
#           - query
#           - test
#       resource_name:
#         description: 'Full resource name (only required for delete)'
#         required: false

# env:
#   PYTHON_VERSION: '3.12'
#   REGION: 'us-central1'
#   MODEL: 'gemini-1.5-pro'
#   APP_NAME: 'Transcript Summarizer'
#   REQUIREMENTS_FILE: 'requirements.txt'

# jobs:
#   adk_agent_workflow:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repo
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r ${{ env.REQUIREMENTS_FILE }}
#         pip install google-adk==1.1.1 fire python-dotenv

#     - name: Authenticate with Google Cloud
#       uses: google-github-actions/auth@v2
#       with:
#         credentials_json: '${{ secrets.GCP_SA_KEY }}'

#     - name: Decode GCP Service Account Key
#       run: echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > service-account.json

#     - name: Set Google Cloud Project
#       run: |
#         echo "GOOGLE_CLOUD_PROJECT=geni-project" >> .env
#         echo "GOOGLE_CLOUD_LOCATION=asia-south1" >> .env
#         echo "GOOGLE_GENAI_USE_VERTEXAI=TRUE" >> .env
#         echo "MODEL=gemini-2.0-flash-exp" >> .env
#         echo "APP_NAME=Transcript Summarizer" >> .env
#         echo "VALIDATE_GCS=false" >> .env
        
#         # echo "STAGING_BUCKET=gs://geni-project_cloudbuild" >> .env

#     - name: Deploy Agent
#       if: ${{ github.event.inputs.action == 'deploy' }}
#       run: |
#         python3 deploy_to_agent_engine.py

#     - name: List Agents
#       if: ${{ github.event.inputs.action == 'list' }}
#       run: |
#         python3 agent_engine_utils.py list

#     - name: Delete Agent
#       if: ${{ github.event.inputs.action == 'delete' && github.event.inputs.resource_name != '' }}
#       run: |
#         python3 agent_engine_utils.py delete "${{ github.event.inputs.resource_name }}"

#     - name: Query Agent
#       if: ${{ github.event.inputs.action == 'query' }}
#       run: |
#         python3 query_app_on_agent_engine.py

#     - name: Test Agent Locally
#       if: ${{ github.event.inputs.action == 'test' }}
#       run: |
#         python3 test_agent_app_locally.py